VARIABLES:
GPS1-GPS2-GPS3-GPS4-GPS5 as LAT-LONG
current_goal


DATA TO BE RECEIVED EVERY 0.1 SECOND:

CURRENT LATITUDE - LONGITUDE
MAGNETIC_HEADING (current_heading)
OBJECT DETECTION

 def signed_angle_difference(C, A): # C as current_heading and A as adviced_course
    # Açılar 0-360 arasında normalize edilir
    C %= 360
    A %= 360

    # Saat yönünde fark (pozitif)
    clockwise_diff = (A - C) % 360

    # Eğer fark 180'den küçükse ya da eşitse, pozitif döndür
    if clockwise_diff <= 180:
        return clockwise_diff
    else:
        # Açı farkı saat yönünün tersindeyse, negatif döndür
        return clockwise_diff - 360 





Measure the distance between the current goal and the next goal in meters: distance_to_next_goal
current_goal starts as gps1, current_goal=gps1


___________________________________
if current_goal==gps1
	
	Calculate the difference using ur current position and the GPS1 position, then get the heading to alter ur course to it simultaneously
	
	set the data as adviced_course
  
  	calculate the error using: #negatif deger tavsiye rotanın iskelede, pozitif deger tavsiye rotanın sancakta kaldıgı anlamına gelir
  	error = signed_angle_difference(current_heading, adviced_course)
  
  	set_servo(1, 1500+error) #iskele makine
  	set_servo(2, 1500-error) #sancak makine

	if distance_to_next_goal < 1 meters:
		current_goal=gps2
_____________________________________
elif current_goal==gps2
_____________________________________
_____________________________________
elif current_goal==gps3
_____________________________________
_____________________________________
elif current_goal==gps4
_____________________________________
_____________________________________
elif current_goal==gps5
		.
		.
		.









_____________________________________


